% From https://tex.stackexchange.com/questions/31384/how-to-enter-publications-in-press-or-submitted-to-in-bibtex#31411
@preamble{ " \newcommand{\noop}[1]{} " } % a do-nothing command that serves a purpose

@misc{goswamiUnifiedSoftwareDesign2023,
  title = {Unified {{Software Design Patterns}} for {{Simulated Annealing}}},
  author = {Goswami, Rohit and S, Ruhila and Goswami, Amrita and Goswami, Sonaly and Goswami, Debabrata},
  date = {2023-02-06},
  number = {arXiv:2302.02811},
  eprint = {2302.02811},
  eprinttype = {arxiv},
  primaryclass = {physics},
  publisher = {{arXiv}},
  url = {http://arxiv.org/abs/2302.02811},
  urldate = {2023-02-10},
  abstract = {Any optimization alogrithm programming interface can be seen as a black-box function with additional free parameters. In this spirit, simulated annealing (SA) can be implemented in pseudo-code within the dimensions of single slide with free parameters relating to the annealing schedule. Such an implementation however, neglects necessarily much of the structure necessary to take advantage of advances in computing resources, and algorithmic breakthroughs. Simulated annealing is often introduced in myriad disciplines, from discrete examples like the Traveling Salesman Problem (TSP) to molecular cluster potential energy exploration or even explorations of a protein's configurational space. Theoretical guarantees also demand a stricter structure in terms of statistical quantities, which cannot simply be left to the user. We will introduce several standard paradigms and demonstrate how these can be "lifted" into a unified framework using object oriented programming in Python. We demonstrate how clean, interoperable, reproducible programming libraries can be used to access and rapidly iterate on variants of Simulated Annealing in a manner which can be extended to serve as a best practices blueprint or design pattern for a data-driven optimization library.},
  archiveprefix = {arXiv},
  keywords = {preprint}
}

@inproceedings{goswamiHPCNixRedundancy2023,
  author={Goswami, Rohit and S, Ruhila and Goswami, Amrita and Goswami, Sonaly and Goswami, Debabrata},
  booktitle={2022 Seventh International Conference on Parallel, Distributed and Grid Computing (PDGC)},
  title={Reproducible High Performance Computing Without Redundancy with Nix (accepted)},
  year={2023},
  volume={},
  number={},
  keywords={conference}
 }

@inproceedings{goswamiReproPhylogenetics2023,
  author={Goswami, Rohit and S, Ruhila},
  booktitle={2022 Seventh International Conference on Parallel, Distributed and Grid Computing (PDGC)},
  title={High Throughput Reproducible Literate Phylogenetic Analysis (accepted)},
  year={2023},
  volume={},
  number={},
  keywords={conference}
 }
